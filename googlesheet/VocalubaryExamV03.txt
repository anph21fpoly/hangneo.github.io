// Bổ sung mã bài kiểm tra
// Bổ sung lưu điểm và kết quả bài kiểm tra vào log
//
//
//
//
// 📌 NHẬP ID FILE DỮ LIỆU GỐC Ở ĐÂY
const DATA_FILE_ID = "1-FqLKbNVq7O7fQ1X08NwWu16BqOMpBV1mh5onBRqBcI"; // 🔥 Thay ID file của bạn vào đây

//Tạo mã ngẫu nhiên
function taoMaNgauNhien() {
  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  var length = 8; // Độ dài của mã ngẫu nhiên
  var result = '';
  for (var i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return result;
}

//Hàm tạo bài kiểm tra
function taoBaiKiemTra() {
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var fileGoc = SpreadsheetApp.openById(DATA_FILE_ID);
  
  var sheetGoc = fileGoc.getSheetByName("DanhSach");
  var sheetLog = fileGoc.getSheetByName("Log");
  
  if (!sheetGoc || !sheetLog) {
    Browser.msgBox("Lỗi: Không tìm thấy sheet 'DanhSach' hoặc 'Log' trong file gốc!");
    return;
  }

  var data = sheetGoc.getDataRange().getValues();
  if (data.length <= 1) {
    Browser.msgBox("Danh sách từ vựng trống!");
    return;
  }

  // Cập nhật số lần tạo bài kiểm tra (Ô A1 trong 'Log')
  var soLanTao = sheetLog.getRange("A1").getValue() || 0;
  sheetLog.getRange("A1").setValue(soLanTao + 1);

  // Ghi lịch sử ngày tạo bài kiểm tra (A2 trở đi)
  var ngayHienTai = new Date();
  var hangMoi = sheetLog.getLastRow() + 1;
  sheetLog.getRange(hangMoi, 1).setValue(Utilities.formatDate(ngayHienTai, Session.getScriptTimeZone(), "yyyy-MM-dd HH:mm:ss"));

  // Yêu cầu số lượng từ
  var soTu = Browser.inputBox("Nhập số lượng từ bạn muốn lấy:", Browser.Buttons.OK_CANCEL);
  soTu = parseInt(soTu, 10);

  if (isNaN(soTu) || soTu <= 0 || soTu >= data.length) {
    Browser.msgBox("Số lượng từ không hợp lệ!");
    return;
  }

  var tuVung = data.slice(1); // Loại bỏ dòng tiêu đề

  // Sắp xếp danh sách từ theo số lần học (Cột C)
  tuVung.sort((a, b) => (a[2] || 0) - (b[2] || 0));

  // Chọn một nửa danh sách từ ít xuất hiện nhất
  var soTuItHoc = Math.ceil(tuVung.length / 2);
  var tuVungItHoc = tuVung.slice(0, soTuItHoc);

  // Chọn ngẫu nhiên từ trong nhóm này
  var tuNgauNhien = [];
  var chiSoDaChon = [];

  while (tuNgauNhien.length < soTu) {
    var index = Math.floor(Math.random() * tuVungItHoc.length);
    if (!chiSoDaChon.includes(index)) {
      chiSoDaChon.push(index);
      tuNgauNhien.push(tuVungItHoc[index]);
    }
  }

  // Cập nhật số lần xuất hiện (Cột C)
  for (var i = 0; i < chiSoDaChon.length; i++) {
    var rowIndex = data.indexOf(tuNgauNhien[i]) + 1;
    var currentCount = sheetGoc.getRange(rowIndex + 1, 3).getValue() || 0;
    sheetGoc.getRange(rowIndex + 1, 3).setValue(currentCount + 1);
  }

  // Xóa sheet cũ nếu có
  var sheetTuVung = spreadsheet.getSheetByName("TuVungOnTap");
  if (sheetTuVung) spreadsheet.deleteSheet(sheetTuVung);

  var sheetKiemTra = spreadsheet.getSheetByName("BaiKiemTra");
  if (sheetKiemTra) spreadsheet.deleteSheet(sheetKiemTra);

  // Tạo sheet "TuVungOnTap"
  sheetTuVung = spreadsheet.insertSheet("TuVungOnTap");
  sheetTuVung.appendRow(["Tiếng Anh", "Tiếng Việt"]);
  tuNgauNhien.forEach(row => sheetTuVung.appendRow([row[0], row[1]]));

  // Tạo sheet "BaiKiemTra"
  sheetKiemTra = spreadsheet.insertSheet("BaiKiemTra");
  sheetKiemTra.appendRow(["Tiếng Việt", "Tiếng Anh"]);
  tuNgauNhien.forEach(row => sheetKiemTra.appendRow([row[1], ""]));

  // Tạo mã ngẫu nhiên
  var maNgauNhien = taoMaNgauNhien();
  
  // Thêm mã ngẫu nhiên vào sheet "BaiKiemTra"
  sheetKiemTra.getRange(1, 3).setValue(maNgauNhien);
  
  // Ghi mã ngẫu nhiên vào sheet "Log"
  sheetLog.getRange(hangMoi, 2).setValue(maNgauNhien);

  Browser.msgBox("Bài kiểm tra đã được tạo! Mở sheet 'BaiKiemTra' để làm bài.");
}

// 📌 Hàm chấm điểm
function chamDiem() {
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheetKiemTra = spreadsheet.getSheetByName("BaiKiemTra");
  var sheetTuVung = spreadsheet.getSheetByName("TuVungOnTap");
  var fileGoc = SpreadsheetApp.openById(DATA_FILE_ID);
  var sheetLog = fileGoc.getSheetByName("Log");

  if (!sheetKiemTra || !sheetTuVung || !sheetLog) {
    Browser.msgBox("Lỗi: Không tìm thấy bài kiểm tra, danh sách ôn tập hoặc sheet Log!");
    return;
  }

  var dataKiemTra = sheetKiemTra.getDataRange().getValues();
  var dataTuVung = sheetTuVung.getDataRange().getValues();

  if (dataKiemTra.length <= 1 || dataTuVung.length <= 1) {
    Browser.msgBox("Lỗi: Bài kiểm tra trống!");
    return;
  }

  var danhSachDapAn = {};
  for (var i = 1; i < dataTuVung.length; i++) {
    danhSachDapAn[dataTuVung[i][1].trim().toLowerCase()] = dataTuVung[i][0].trim().toLowerCase();
  }

  var soDung = 0;
  var tongSoTu = dataKiemTra.length - 1;

  for (var j = 1; j < dataKiemTra.length; j++) {
    var nghiaTV = dataKiemTra[j][0].toString().trim().toLowerCase();
    var tuNhap = dataKiemTra[j][1] ? dataKiemTra[j][1].toString().trim().toLowerCase() : "";

    if (danhSachDapAn[nghiaTV] && danhSachDapAn[nghiaTV] === tuNhap) {
      soDung++;
    }
  }

  // Lấy mã ngẫu nhiên từ sheet "BaiKiemTra"
  var maNgauNhien = sheetKiemTra.getRange(1, 3).getValue();

  // Tìm dòng tương ứng trong sheet "Log"
  var dataLog = sheetLog.getDataRange().getValues();
  var hangChinhXac = -1;
  for (var i = 1; i < dataLog.length; i++) {
    if (dataLog[i][1] === maNgauNhien) {
      hangChinhXac = i + 1;
      break;
    }
  }

  if (hangChinhXac === -1) {
    Browser.msgBox("Không tìm thấy mã ngẫu nhiên trong sheet 'Log'!");
    return;
  }

  // Tính thời gian làm bài
  var ngayTaoBai = new Date(sheetLog.getRange(hangChinhXac, 1).getValue());
  var ngayHienTai = new Date();
  var thoiGianLamBai = (ngayHienTai.getTime() - ngayTaoBai.getTime()) / 1000; // Tính theo giây

  // Lưu kết quả vào sheet "Log"
  sheetLog.getRange(hangChinhXac, 3).setValue(soDung + "/" + tongSoTu);
  sheetLog.getRange(hangChinhXac, 4).setValue(thoiGianLamBai);

  Browser.msgBox("Kết quả: " + soDung + "/" + tongSoTu + " từ đúng!");
}
